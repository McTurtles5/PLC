-- I'd reccomend using Downloader.txt

local bypassMaintenance = false

local url = "https://raw.githubusercontent.com/McTurtles5/PLC/main/PLC-resources/maintenance"
local maintenanceInfo = game:GetService("HttpService"):JSONDecode(game:HttpGet(url))
if maintenanceInfo[1] and not bypassMaintenance then
	notify("PLC maintenance", "PLC is under maintenance. Dev note: "..maintenanceInfo[2])
	while wait(5) do
		local unavalible = game:GetService("HttpService"):JSONDecode(game:HttpGet(url))
		if not unavalible[1] then
			deletePlugin("PLC")
			wait(1)
			addPlugin("PLC")
			break
		end
	end
	wait(math.huge)
end

PLCver = 8 -- DO NOT CHANGE OR REMOVE

local function ge() return getgenv() end

ge().PLCdata = ge().PLCdata or {} -- DO NOT REMOVE

ge().PLCdata.fastbring = false -- If you want fastbring or normal bring (I recommend normal bring) [true/false]

ge().PLCdata.admin = {} -- DO NOT REMOVE
ge().PLCdata.admin.everyone = false -- If you want everyone to be admin
ge().PLCdata.admin.admins = { -- People you want to ALWAYS be admin (Username)
	"gamer",
	"gamerII",
}
ge().PLCdata.admin.superadmins = { -- People you want to ALWAYS be super admin (Username)
	"Epicgamer",
}
ge().PLCdata.admin.blacklisted = { -- People you want to EXCULDE from everyone admin (Username)
	"annoyingnoob",
}

ge().PLCdata.admin.prefix = ":" -- The give admin prefix

local ret = nil
local worked, error = pcall(function()
	ret = loadstring(game:HttpGet("https://raw.githubusercontent.com/McTurtles5/PLC/main/PLC-main.IY"))()
end)

if not worked then
	print("PLC CRITICAL ERROR", error)
	notify("CRITICAL ERROR", "PLC has encountered a critical error, try updating or try again later.")
	wait(5)
	return
end

return ret
